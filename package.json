{
  "name": "api-server-template",
  "version": "1.0.0",
  "description": "Basic NodeJS + express + typeorm API server.",
  "private": "true",
  "config": {
    "dockerImageName": "api-server",
    "dockerContainerName": "api-server",
    "dockerImageEcrName": "<ecr repo name>/<app-name>/api-server",
    "ecrRepoName": "<ecr repo name>"
  },
  "scripts": {
    "dev": "npm run migration:run && debug=* NODE_PATH=./src ts-node-dev -r tsconfig-paths/register --respawn ./src/index.ts",
    "tsc-build": "tsc",
    "build": "npm run tsc-build",
    "start": "npm run migration:run && NODE_PATH=./dist node -r tsconfig-paths/register ./dist/index.js",
    "create:network": "sh ./scripts/create-docker-network.sh",
    "migration:generate": "sh ./scripts/check-name-tag.sh && DATABASE_HOST=localhost NODE_PATH=./src ./../../node_modules/.bin/ts-node ./../../node_modules/.bin/typeorm migration:generate -d ./src/orm/config/index.ts ./src/orm/migrations/${NAME}",
    "migration:run": "npx typeorm-ts-node-commonjs migration:run -d ../common/src/orm/config/index.ts",
    "migration:run:fake": "npx typeorm-ts-node-commonjs migration:run --fake -d ../common/src/orm/config/index.ts",
    "lint": "eslint --max-warnings 0 . && npm run tsc",
    "lint-fix": "eslint --fix .",
    "lint-staged-husky": "lint-staged",
    "tsc": "tsc --noEmit",
    "format-lint": "prettier --config .prettierrc -l --ignore-unknown .",
    "format-fix": "prettier --config .prettierrc --write --ignore-unknown .",
    "test": "jest --config ./jest.config.ts --runInBand --detectOpenHandles",
    "test-no-cache": "jest --config ./jest.config.ts --runInBand --detectOpenHandles --no-cache",
    "commit": "git-cz",
    "docker:build": "sh ./scripts/check-image-tag.sh && tar --exclude='node_modules' --exclude='dist' --exclude='.git' --exclude='*.env' -cf - ../.. | docker build --platform=linux/amd64 -f apps/api-server/Dockerfile - -t $npm_package_config_dockerImageName:${IMAGE_TAG}",
    "docker:start": "sh ./scripts/check-image-tag.sh && docker run --platform=linux/amd64 -p 80:80 --env-file ./.env --name $npm_package_config_dockerContainerName --rm --network=app_network -it $npm_package_config_dockerImageName:${IMAGE_TAG}",
    "docker:login": "./scripts/docker-login.sh $npm_package_config_ecrRepoName:",
    "docker:publish": "sh ./scripts/check-image-tag.sh && docker tag $npm_package_config_dockerImageName:${IMAGE_TAG} $npm_package_config_dockerImageEcrName:${IMAGE_TAG} && docker push $npm_package_config_dockerImageEcrName:${IMAGE_TAG}",
    "docker:login-publish": "npm run docker:login && npm run docker:publish",
    "docker:dev": "docker compose --file docker-compose.dev.yml --env-file .env up --build",
    "deploy:image:staging": "sh ./scripts/check-image-tag.sh && sh ./scripts/update-image-tag-eb-env.sh ${IMAGE_TAG} && eb deploy staging-api-server",
    "deploy:image:prod": "sh ./scripts/check-image-tag.sh && sh ./scripts/update-image-tag-eb-env.sh ${IMAGE_TAG} && eb deploy prod-api-server",
    "populate-env-vars:prod": "./scripts/populate-env-vars.sh prod.env prod-api-server",
    "populate-env-vars:staging": "./scripts/populate-env-vars.sh staging.env staging-api-server"
  },
  "dependencies": {
    "axios": "^1.6.8",
    "class-validator": "^0.14.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "cron": "^2.4.3",
    "express": "^4.17.3",
    "helmet": "^5.0.2",
    "http-status": "^1.6.2",
    "joi": "^17.9.2",
    "jsonwebtoken": "^8.5.1",
    "morgan": "^1.10.0",
    "mysql2": "^2.3.3",
    "node-fetch": "^2.7.0",
    "reflect-metadata": "^0.1.13",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0",
    "typeorm": "^0.3.17",
    "typeorm-encrypted": "^0.8.0",
    "typeorm-naming-strategies": "^4.1.0",
    "validator": "^13.7.0",
    "winston": "^3.10.0",
    "winston-cloudwatch": "^6.2.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^16.2.4",
    "@commitlint/config-conventional": "^16.2.4",
    "@types/body-parser": "^1.19.2",
    "@types/chai": "^4.3.1",
    "@types/compression": "^1.7.2",
    "@types/cors": "^2.8.12",
    "@types/express": "^4.17.13",
    "@types/jsonwebtoken": "^8.5.8",
    "@types/morgan": "^1.9.3",
    "@types/node": "^18.18.0",
    "@types/node-fetch": "^2.6.4",
    "@typescript-eslint/eslint-plugin": "^5.23.0",
    "@typescript-eslint/parser": "^5.23.0",
    "dotenv": "^16.0.1",
    "eslint": "^8.15.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-no-array-reduce": "^1.0.58",
    "eslint-plugin-prettier": "^4.0.0",
    "lint-staged": "^12.4.1",
    "prettier": "^2.6.2",
    "pretty-quick": "^3.1.3",
    "ts-node": "10.7.0",
    "ts-node-dev": "^1.1.8",
    "tsc-files": "^1.1.3",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.6.3"
  }
}
